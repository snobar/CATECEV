@using CATECEV.FE.Models.ViewModels
@model PartnerPaymentPageViewModel

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function () {
         $('#paymentForm').submit(function (e) {
            e.preventDefault();
            $('.text-danger').text(''); // clear previous errors

            const amount = parseFloat($('#NewPayment_PaymentAmount').val());

            if (isNaN(amount) || amount === 0) {
                $('#amountValidationMsg').text('Payment amount must be greater than zero.');
                return;
            }

            $.ajax({
                url: '@Url.Action("Manage", "Data")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (res) {
                    if (res.success) {
                        location.reload(); // Reloads the entire page
                    } else {
                        res.errors.forEach(function (msg, i) {
                            $(`.field-validation-error:eq(${i})`).text(msg);
                        });
                    }
                }
            });
        });

        });

        $('#refreshBalanceBtn').click(function () {
            var $icon = $(this).find('i');
            $icon.addClass('fa-spin');
            $('#refreshSuccessMsg').hide(); // hide before reloading

            $.ajax({
                url: '@Url.Action("RefreshBalance", "Data")',
                type: 'GET',
                data: { id: '@Model.NewPayment.PartnerId' },
                success: function (res) {
                    $icon.removeClass('fa-spin');
                    if (res.success) {
                        $('#balanceAmountText').text(res.newBalance);
                        $('#refreshSuccessMsg').fadeIn().delay(2000).fadeOut(); // show for 2s
                    } else {
                        alert("Failed to refresh balance.");
                    }
                },
                error: function () {
                    $icon.removeClass('fa-spin');
                    alert("Error contacting server.");
                }
            });
        });

                $('#sendEmailBtn').click(function () {
            var $icon = $(this).find('i');
            $icon.addClass('fa-spin');
            $('#emailSuccessMsg').hide();

            $.ajax({
                url: '@Url.Action("SendBalanceEmail", "Data")',
                type: 'POST',
                data: { id: '@Model.NewPayment.PartnerId' },
                success: function (res) {
                    $icon.removeClass('fa-spin');
                    if (res.success) {
                        $('#emailSuccessMsg').fadeIn().delay(2000).fadeOut();
                    } else {
                        alert("Failed to send email.");
                    }
                },
                error: function () {
                    $icon.removeClass('fa-spin');
                    alert("Error contacting server.");
                }
            });
        });


    </script>
}

<style>
    body {
        font-size: 12px;
    }

    table, table th, table td,
    form, form label, form input,
    .btn {
        font-size: 12px !important;
    }
</style>
<div class="mb-3">
    <a asp-action="Index" asp-controller="Data" class="btn btn-secondary">
        ← Back to Partner List
    </a>
</div>

@if (Model.SelectedPartner != null)
{
    <div class="mb-4 border p-3 rounded bg-light">
        <h6>Partner Information</h6>
        <dl class="row mb-0">
            <dt class="col-sm-3">Name</dt>
            <dd class="col-sm-9">@Model.SelectedPartner.Name</dd>

            <dt class="col-sm-3">Reg No</dt>
            <dd class="col-sm-9">@Model.SelectedPartner.RegNo</dd>

            <dt class="col-sm-3">Balance Amount</dt>
            <dd class="col-sm-9">
                <div class="d-flex align-items-center">
                    <span id="balanceAmountText">@Model.SelectedPartner.BalanceAmount.ToString()</span>

                    <button id="refreshBalanceBtn" class="btn btn-outline-secondary btn-sm ms-2" type="button" title="Refresh Amount Balance">
                        <i class="fas fa-sync-alt"></i>
                    </button>

                    <button id="sendEmailBtn" class="btn btn-outline-primary btn-sm ms-2" type="button" title="Send Balance Email">
                        <i class="fas fa-envelope"></i>
                    </button>

                    <span id="refreshSuccessMsg" class="ms-2 text-success fw-bold" style="display:none;">✔ Refreshed</span>
                    <span id="emailSuccessMsg" class="ms-2 text-success fw-bold" style="display:none;">📧 Sent</span>
                </div>
            </dd>

        </dl>
    </div>
}

@using (Html.BeginForm("Manage", "Data", FormMethod.Post, new { @id = "paymentForm", @class = "d-flex flex-wrap align-items-end gap-2 mb-4" }))
{
    @Html.HiddenFor(m => m.NewPayment.PartnerId)

    <div>
        @Html.LabelFor(m => m.NewPayment.PaymentAmount, new { @class = "form-label" })
        @Html.TextBoxFor(m => m.NewPayment.PaymentAmount, new { @class = "form-control", type = "number", step = "0.01" })
        <span class="text-danger" id="amountValidationMsg"></span>

    </div>
    <div>
        @Html.LabelFor(m => m.NewPayment.PaymentDate, new { @class = "form-label" })
        @Html.TextBoxFor(m => m.NewPayment.PaymentDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
    </div>
    <div>
        <label class="form-label d-block">&nbsp;</label>
        <button type="submit" class="btn btn-primary">Add</button>
    </div>
}

<hr />

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Payment</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Payments)
        {
            <tr>
                <td>@item.PaymentAmount</td>
                <td>@item.PaymentDate.ToShortDateString()</td>
            </tr>
        }
    </tbody>
</table>

